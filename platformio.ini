; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;set default_envs to whichever board(s) you use. Build/Run/etc processes those envs
default_envs = wroom
 ; lilygo-t-display

[env]
; Global data for all [env:***]
framework = arduino
lib_ldf_mode = deep

;lib_extra_dirs = C:\Users\info\source\repos
lib_deps =
  SignalK/SensESP@^2.7.2
  ;additional libs
  ;simsso/ShiftRegister74HC595@^1.3.1

[espressif32_base]
;this section has config items common to all ESP32 boards
platform = espressif32
build_unflags =
  -Werror=reorder
board_build.partitions = min_spiffs.csv
monitor_filters = esp32_exception_decoder


[env:lilygo-t-display]
platform = espressif32
board = lilygo-t-display

; change microcontroller
board_build.mcu = esp32

; change MCU frequency
board_build.f_cpu = 240000000L


[env:wroom]
extends = espressif32_base
board = esp32dev


build_flags = 
	-D REMOTE_DEBUG
;    -D DEBUG_DISABLED
	-D LED_BUILTIN=23
;	-D DEBUG_LEVEL=1
	  ; Max (and default) debugging level in Arduino ESP32 Core
    -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
  ; Arduino Core bug workaround: define the log tag for the Arduino
  ; logging macros.
    -D TAG='"Arduino"'
  ; Use the ESP-IDF logging library - required by SensESP.
    -D USE_ESP_IDF_LOG
;; Uncomment and change these if PlatformIO can't auto-detect the ports
;upload_port = /dev/cu.wch*
;monitor_port = /dev/cu.wch*

;; Uncomment the following lines to use Over-the-air (OTA) Updates

upload_protocol = espota
;upload_port = N2KSERVER
upload_port = 192.168.1.174
upload_flags =
   --auth=mypassword